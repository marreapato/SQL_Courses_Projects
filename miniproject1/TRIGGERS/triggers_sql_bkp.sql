-- COMUNICAÇÃO ENTRE DOIS BANCOS

-----

CREATE DATABASE LOJA;

USE LOJA;

CREATE TABLE PRODUTO(
	IDPRODUTO INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30),
	VALOR FLOAT(10,2)
);

STATUS

CREATE DATABASE BACKUP;

USE BACKUP;

CREATE TABLE BKP_PRODUTO(
	IDBKP INT PRIMARY KEY AUTO_INCREMENT,
	IDPRODUTO INT,
	NOME VARCHAR(30),
	VALOR FLOAT(10,2)
);


USE LOJA;

INSERT INTO BACKUP.BKP_PRODUTO VALUES(NULL,1000,'TESTE',0);

DELIMITER $
--TRIGGER ERRADA
CREATE TRIGGER BACKUP_PRODUTO
BEFORE INSERT ON PRODUTO
FOR EACH ROW 
BEGIN
	
	INSERT INTO BACKUP.BKP_PRODUTO VALUES(NULL,NEW.IDPRODUTO,NEW.NOME,NEW.VALOR);

END$

DELIMITER ;


INSERT INTO PRODUTO VALUES(NULL,'LIVRO',90.0);
INSERT INTO PRODUTO VALUES(NULL,'LIVRO 1',95.0);
INSERT INTO PRODUTO VALUES(NULL,'LIVRO 2',550.0);
INSERT INTO PRODUTO VALUES(NULL,'LIVRO 3',40.0);
INSERT INTO PRODUTO VALUES(NULL,'LIVRO 4',904.0);


SELECT * FROM PRODUTO;

SELECT * FROM BACKUP.BKP_PRODUTO;


DELIMITER $

CREATE TRIGGER BACKUP_PRODUTO_DEL
BEFORE DELETE ON PRODUTO
FOR EACH ROW 
BEGIN
	
	INSERT INTO BACKUP.BKP_PRODUTO VALUES(NULL,OLD.IDPRODUTO,OLD.NOME,OLD.VALOR);

END$

DELIMITER ;

DELETE FROM PRODUTO WHERE IDPRODUTO=2;


SELECT * FROM PRODUTO;

SELECT * FROM BACKUP.BKP_PRODUTO;



DROP TRIGGER BACKUP_PRODUTO;

DELIMITER $

CREATE TRIGGER BACKUP_PRODUTO
AFTER INSERT ON PRODUTO
FOR EACH ROW 
BEGIN
	
	INSERT INTO BACKUP.BKP_PRODUTO VALUES(NULL,NEW.IDPRODUTO,NEW.NOME,NEW.VALOR);

END$

DELIMITER ;

INSERT INTO PRODUTO VALUES(NULL,'LIVRO CSHARP',934.9);

SELECT * FROM PRODUTO;

SELECT * FROM BACKUP.BKP_PRODUTO;


-- TRIGGER DE DELETE IDENTIFICACAO BKP


ALTER TABLE BACKUP.BKP_PRODUTO
ADD EVENTO CHAR(1);


DROP TRIGGER BACKUP_PRODUTO_DEL;

DELIMITER $

CREATE TRIGGER BACKUP_PRODUTO_DEL
BEFORE DELETE ON PRODUTO
FOR EACH ROW 
BEGIN
	
	INSERT INTO BACKUP.BKP_PRODUTO VALUES(NULL,OLD.IDPRODUTO,OLD.NOME,OLD.VALOR,'D');

END$

DELIMITER ;

DELETE FROM PRODUTO WHERE IDPRODUTO=4;

SELECT * FROM BACKUP.BKP_PRODUTO;
